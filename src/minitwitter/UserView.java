package minitwitter;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Observable;
import java.util.Observer;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

public class UserView extends javax.swing.JFrame implements Observer, Element {

    String id;
    UserGroup group = new UserGroup("root");//belongs to root group at the begining

    public ArrayList<String> myTweets = new ArrayList<>();
    public ArrayList<UserView> followings = new ArrayList<>();
    public ArrayList<UserView> followers = new ArrayList<>();

    /**
     * Creates new form UserView
     * @param id
     */
    public UserView(String id) {
        initComponents();
        this.id = id;
        this.setTitle("User: " + id + " in group " + group);

        //set following users list
        ArrayList<UserGroup> userGroups = AdminControlPanel.userGroups;

        for (UserGroup ug : userGroups) {
            allGroupList.addItem(ug);
        }

        //init all the users list
//        updateUserList();
//        updateFollowingUserList();
//        updateNewsFeed();
//        updateMyTweetList();
    }

    @Override
    public void accept(VisitorInterface visitor) {
        visitor.visitUser(this);
    }

    public void updateNewsFeed() {
        //get followers news feed and update the feed
        DefaultListModel defaultListModel = new DefaultListModel();
        for (UserView u : followings) {
            for (String msg : u.myTweets) {
                defaultListModel.addElement(u + ": " + msg);
            }
        }
        newsFeedList.setModel(defaultListModel);
    }

    /**
     * updateFollowingUserList updateUserList
     */
    public void updateFollowingUserList() {

        DefaultListModel defaultListModel = new DefaultListModel();
        for (UserView u : followings) {
            defaultListModel.addElement(u);
        }
        followingUsersList.setModel(defaultListModel);
    }

    /**
     * updateUserList
     */
    public void updateUserList() {
        allUserList.removeAllItems();
        Set<UserView> s = new HashSet(AdminControlPanel.users);
        for (UserView user : s) {
            allUserList.addItem(user);
        }
        for (UserView user : followings) {
            allUserList.removeItem(user);
        }

    }

    /**
     * updateMyTweetList
     */
    public void updateMyTweetList() {
        DefaultListModel defaultListModel = new DefaultListModel();
        for (String tweet : myTweets) {
            defaultListModel.addElement(tweet);
        }
        MyTweetList.setModel(defaultListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        followUserBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        followingUsersList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        newTweetTextArea = new javax.swing.JTextArea();
        postTweetBtn = new javax.swing.JButton();
        allUserList = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        newsFeedList = new javax.swing.JList();
        allGroupList = new javax.swing.JComboBox();
        followGroupBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        MyTweetList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        followUserBtn.setText("Follow User");
        followUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followUserBtnActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(followingUsersList);

        newTweetTextArea.setColumns(20);
        newTweetTextArea.setRows(5);
        jScrollPane3.setViewportView(newTweetTextArea);

        postTweetBtn.setText("Post Tweet");
        postTweetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postTweetBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("News Feed");

        jLabel2.setText("Current Following");

        jScrollPane4.setViewportView(newsFeedList);

        followGroupBtn.setText("Add to Group");
        followGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followGroupBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("My Tweets");

        jScrollPane5.setViewportView(MyTweetList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(allUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(66, 66, 66)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(followUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                                .addComponent(postTweetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))))))
                            .addComponent(allGroupList, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(followGroupBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(followUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(allUserList))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allGroupList, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(followGroupBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(postTweetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * New tweet
     *
     * @param evt
     */
    private void postTweetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postTweetBtnActionPerformed
        String tweet = newTweetTextArea.getText();
        //notify followers to update the news feed
        tweet(tweet);

        /**
         * Observers update (notify observers)
         */
        for (UserView u : followings) {
            u.update(this, tweet);
        }

        newTweetTextArea.setText("");
        //user.notifyObservers(); newTweetTextArea.setText("");
        JOptionPane.showMessageDialog(rootPane, "New Tweet Added!\n Followers notified!");
        //update the followers
    }//GEN-LAST:event_postTweetBtnActionPerformed

    /**
     * follow a user: add that user to the observers list
     *
     * @param evt
     */
    private void followUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followUserBtnActionPerformed
        UserView follower = (UserView) allUserList.getSelectedItem();
        //add this follower to the followers list of the user
        followings.add(follower);

        //add this user as a follower of the follower group
        follower.followers.add(this);
        //remove from the available users to folllow list
        allUserList.removeItem(follower);
        updateFollowingUserList();
        //addObserver(follower);
        updateNewsFeed();
        JOptionPane.showMessageDialog(rootPane, "User: " + follower + " added to following users!");

    }//GEN-LAST:event_followUserBtnActionPerformed

    /**
     * Add user to a group
     *
     * @param evt
     */
    private void followGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followGroupBtnActionPerformed

        UserGroup grp = (UserGroup) allGroupList.getSelectedItem();
        this.group = grp;
//        grp.users.add(user);
//        JOptionPane.showMessageDialog(rootPane, "User is added to the Group: " + grp);
    }//GEN-LAST:event_followGroupBtnActionPerformed

    public JComboBox getAllGroupList() {
        return allGroupList;
    }

    public void setAllGroupList(JComboBox allGroupList) {
        this.allGroupList = allGroupList;
    }

    public JComboBox getAllUserList() {
        return allUserList;
    }

    public void setAllUserList(JComboBox allUserList) {
        this.allUserList = allUserList;
    }

    public JList getFollowingUsersList() {
        return followingUsersList;
    }

    public void setFollowingUsersList(JList followingUsersList) {
        this.followingUsersList = followingUsersList;
    }

    public JTextArea getNewTweetTextArea() {
        return newTweetTextArea;
    }

    public void setNewTweetTextArea(JTextArea newTweetTextArea) {
        this.newTweetTextArea = newTweetTextArea;
    }

    public JList getNewsFeedList() {
        return newsFeedList;
    }

    public void setNewsFeedList(JList newsFeedList) {
        this.newsFeedList = newsFeedList;
    }

    public JList getMyTweetList() {
        return MyTweetList;
    }

    public void setMyTweetList(JList MyTweetList) {
        this.MyTweetList = MyTweetList;
    }

    /**
     * getters setters
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList MyTweetList;
    private javax.swing.JComboBox allGroupList;
    private javax.swing.JComboBox allUserList;
    private javax.swing.JButton followGroupBtn;
    private javax.swing.JButton followUserBtn;
    private javax.swing.JList followingUsersList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea newTweetTextArea;
    private javax.swing.JList newsFeedList;
    private javax.swing.JButton postTweetBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        updateNewsFeed();
        updateUserList();
        updateNewsFeed();
        updateFollowingUserList();
        updateMyTweetList();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void update(UserView follower, String message) {
        updateNewsFeed();
        updateUserList();
        updateNewsFeed();
        updateFollowingUserList();
        updateMyTweetList();

        setVisible(this.isShowing());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public String toString() {
        return id;
    }

    public void tweet(String tweet) {
        myTweets.add(tweet);
        updateMyTweetList();
        //setVisible(true);
    }

}
